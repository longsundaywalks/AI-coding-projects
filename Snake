import pygame
import random

# Initialize Pygame and set screen size
pygame.init()
screen_width = 1920
screen_height = 1080
screen = pygame.display.set_mode((screen_width, screen_height))

# Set the title of the window
pygame.display.set_caption("Snake Game")

# Define some colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)

# Create the snake block
snake_block = 10
snake_speed = 30

# Set the font for the score
#font_style = pygame.font.SysFont(None, 50)

# Create a function to display the score
#def message(msg, color):
 #   mesg = font_style.render(msg, True, color)
 #   screen.blit(mesg, [screen_width/2, screen_height/2])

# Create the snake
def snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(screen, black, [x[0], x[1], snake_block, snake_block])

# Create the main loop of the game
def gameLoop():
    game_over = False
    game_close = False
    Length_of_snake = 5

    # Set the starting position of the snake
    x1 = 300
    y1 = 300
    x1_change = 0
    y1_change = 0

    # Create the snake list
    snake_List = [[x1, y1]]

    # Create the food for the snake
    foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0
    foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0

    while not game_over:

        while game_close == True:
            screen.fill(white)
            #message("You Lost! Press Q-Quit or C to Play Again", red)
            #Your_score(len(snake_List))
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        gameLoop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
                game_close = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                     y1_change = -snake_block
                     x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        # Add the change in position to the current position to move the snake
        x1 += x1_change
        y1 += y1_change

        # Create boundaries for the snake so it doesn't go off the screen
        if x1 >= screen_width or x1 < 0 or y1 >= screen_height or y1 < 0:
            game_close = True

        # Fill the screen with a white background
        screen.fill(white)

        # Create the food for the snake
        pygame.draw.rect(screen, red, [foodx, foody, snake_block, snake_block])

        # Update the snake's position
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        # Check if the snake has collided with itself
        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True

        # Update the snake on the screen
        snake(snake_block, snake_List)

        # Update the display
        pygame.display.update()

        # Check if the snake has collided with the food
        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0
            foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0
            Length_of_snake += 1

        # Set the speed of the snake
        clock.tick(snake_speed)

    # Quit the game
    pygame.quit()

gameLoop()
